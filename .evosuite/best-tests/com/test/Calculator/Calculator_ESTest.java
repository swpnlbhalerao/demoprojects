/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 25 10:19:03 GMT 2019
 */

package com.test.Calculator;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.test.Calculator.CalcInterface;
import com.test.Calculator.Calculator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Calculator_ESTest extends Calculator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      double double0 = Calculator.getResult((-1573.842), (-1573.842), '*');
      assertEquals(2476978.6409640005, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      double double0 = Calculator.getResult(1397.18322, 0.0, '*');
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      double double0 = Calculator.getResult((-154.5272349487198), (-1569.7), '+');
      assertEquals((-1724.2272349487198), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CalcInterface calcInterface0 = mock(CalcInterface.class, new ViolatedAssumptionAnswer());
      doReturn((-2168.84721471674), 0.0).when(calcInterface0).calculateService(anyDouble() , anyDouble());
      Calculator calculator0 = new Calculator(calcInterface0);
      double double0 = Calculator.perform((-2168.84721471674), (-1496.933), '.');
      assertEquals(4703898.24078456, double0, 0.01);
      
      double double1 = Calculator.perform(1075.444, 1075.444, 'o');
      assertEquals(0.0, double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      double double0 = Calculator.getResult(117.9792765606457, 1284.592760940977, '/');
      assertEquals(0.09184177285432053, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      double double0 = Calculator.getResult(758.4, 1064.15, '-');
      assertEquals((-305.7500000000001), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      double double0 = Calculator.getResult(659.2643551, (-976.939347), '.');
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      double double0 = Calculator.getResult((-1049.492), 0.0, ',');
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      double double0 = Calculator.getResult(0.0, (-1024.61245253), 't');
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      // Undeclared exception!
      try { 
        Calculator.perform(0.0, 0.0, 'x');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.test.Calculator.Calculator", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String[] stringArray0 = new String[1];
      Calculator.main(stringArray0);
      assertEquals(1, stringArray0.length);
  }
}
